; void *sbrk(size_t)
;
; Called by malloc to obtain more memory from the heap

; Comments added by Paul Cawte 12/06/2023
;

	assume	adl=1

	section	.text
	public	_sbrk
_sbrk:
	pop	de 				; get requested size in HL from calling parameter
	ex	(sp), hl
	push	de

	ld	de, (__sbrkbase) 		; get current top of heap
	add	hl, de 				; calculate new top of heap
	jq	c, .fail

	ld	bc, not ___heaptop 		; make sure do not go passed the allowed top of heap
	add	hl, bc
	jq	c, .fail
	sbc	hl, bc

	ld	(__sbrkbase), hl 		; store the new top of heap

	ex	de, hl 				; get the address of the block into HL - and return it
	ret
.fail:
	or	a, a 				; if allocation failed, return 0
	sbc	hl, hl
	ret

	section	.data
	public	__sbrkbase
__sbrkbase:
	dl	___heapbot			; storage for the address of the next block to allocate
						;   is initialised to the bottom of the heap

	extern	___heapbot
	extern	___heaptop
